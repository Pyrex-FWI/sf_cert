<?php

namespace Cpyree\SynologyBundle\Webapi;

use Cpyree\SynologyBundle\Services\SynologySession;

class MoveCopyStartRequest extends WebApiRequest{


	private $source;

	private $destination;

	private $overwrite = false;

	private $removeSource = false;

    /**
     * @param SynologySession $session
     * @return $this
     * @throws Exception
     */
    public function setSession(SynologySession $session)
    {
        parent::setSession($session); // TODO: Change the autogenerated stub
        $this->setApiName('SYNO.FileStation.CopyMove');
        return $this;
    }


	/**
	 * @return SynoResponse
	 */
	public function send(){
		$this
			->setMethod('start')
			->addParam('path', $this->getSource())
			->addParam('dest_folder_path',$this->getDestination())
			->addParam('remove_src',$this->getRemoveSource())
			->addParam('overwrite',$this->getOverwrite());
		return parent::send();
	}

	public function setSource($fileOrDir)
	{
		$this->source = $fileOrDir;
		return $this;
	}

	public function setDestination($dest)
	{
		$this->destination = $dest;
		return $this;
	}

	/**
	 * @return mixed
	 */
	protected function getSource()
	{
		return $this->source;
	}

	/**
	 * @return mixed
	 */
	protected  function getDestination()
	{
		return $this->destination;
	}

	/**
	 * @return boolean
	 */
	public function getOverwrite()
	{
		return $this->overwrite;
	}

	/**
	 * @param boolean $overwrite
	 * @return $this
	 */
	public function setOverwrite($overwrite)
	{
		$this->overwrite = $overwrite;
		return $this;

	}

	/**
	 * @return boolean
	 */
	public function getRemoveSource()
	{
		return $this->removeSource;
	}

	/**
	 * @param boolean $removeSource
	 * @return $this
	 */
	public function setRemoveSource($removeSource)
	{
		$this->removeSource = $removeSource;
		return $this;

	}

	private function getDestPath()
	{
		return $this->destination;
	}
}
