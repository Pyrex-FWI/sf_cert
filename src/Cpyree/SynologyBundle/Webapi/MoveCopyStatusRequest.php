<?php

namespace Cpyree\SynologyBundle\Webapi;

use Cpyree\SynologyBundle\Services\SynologySession;

class MoveCopyStatusRequest extends WebApiRequest{

    private $taskId;
	private $nLoop = 0;
    /**
     * @param mixed $taskId
     * @return $this
     */
    public function setTaskId($taskId)
    {
        if(strlen($taskId) == 0){
            throw new \Exception("Task id must be not empty");
        }
        $this->taskId = $taskId;
        $this->nLoop = 0;
        $this
            ->setMethod('status')
            ->addParam('taskid', $this->taskId);
        return $this;
    }


    /**
     * @param int $delay
     * @return MoveCopyStatusResponse
     */
    public function send($delay = 0){
        if($delay > 0 ) $this->wait($delay);
        if (ob_get_level() == 0) ob_start();

        $r = parent::send();
        ob_flush();
        flush();
        if($r->getSuccess() && $r->is('finished') === false){
            $this->wait();
            $this->nLoop++;
            return $this->send();
        }else {
            $moveCopyStatusResponse = new MoveCopyStatusResponse($r);
            return $moveCopyStatusResponse;
        }
	}

	public function wait($seconds = 0){

		if($this->nLoop > 0){
			$newSleep = $this->loopWait + intval(($this->loopWait/2) * $this->nLoop);
			return parent::wait($newSleep);
		}
		return parent::wait($seconds);
	}

    /**
     * @param SynologySession $session
     * @return $this
     * @throws Exception
     */
    public function setSession(\Cpyree\SynologyBundle\Services\SynologySession $session)
    {
        parent::setSession($session); // TODO: Change the autogenerated stub
        $this->setApiName('SYNO.FileStation.CopyMove');
        return $this;

    }
}
