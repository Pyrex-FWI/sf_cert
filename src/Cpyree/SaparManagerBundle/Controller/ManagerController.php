<?php

namespace Cpyree\SaparManagerBundle\Controller;

use Cpyree\SaparManagerBundle\Form\Type\PathListType;
use Cpyree\SaparManagerBundle\Service\ManagerService;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

/**
 * Class ManagerController
 * @package Cpyree\SaparManagerBundle\Controller
 * @Route(path="sapar_manager")
 */
class ManagerController extends Controller
{
    /**
     * @var ManagerService
     */
    public $saparManager = null;

    public function setContainer(ContainerInterface $container = null)
    {
        parent::setContainer($container); // TODO: Change the autogenerated stub
        $this->saparManager = $this->get('cpyree_sapar_manager');
    }


    /**
     * @Route("/")
     * @Template()
     */
    public function indexAction(Request $request)
    {
        $form = $this->createForm($this->getPathForm());
        $form->handleRequest($request);
        $confData = $form->get('path')->getData();
        $this->updateConf($confData);
        $opt = array_keys($this->container->getParameter('genres_dest'));
        sort($opt);
        return array(
            'pathForm'  => $this->createForm($this->getPathForm())->createView(),
            'listOpts'   => $opt
        );
    }

    function updateConf($dataConf = array()){
        $updated = false;
        foreach ((array)$dataConf as $dir) {
            if($dir['dest'] == "") continue;
            $this->saparManager->add($dir['dest'],base64_decode($dir['realPathName']));
            $updated = true;
        }
        if($updated == true){
            $this->saparManager->saveConf();
        }
    }

    /**
     * @Route("/temp/listing", options={"expose"=true})
     * @Template()
     */
    public function tempListingAction(Request $request){
            $response = new JsonResponse();
            $response->setData(
                array(
                    "data"      =>  $this->saparManager->listProcessedTempArray(false),
                    "success"   =>  1
                )
            );
            return $response;
    }
    /**
     * @Route("/temp/detailDir/{name}", options={"expose"=true})
     * @Template()
     */
    public function dirDetailAction(Request $request, $name){
            $response = new JsonResponse();
            $response->setData(
                array(
                    "data"      =>  $this->saparManager->getDirDetail($name),
                    "success"   =>  1
                )
            );
            return $response;
    }


    /**
     * @return PathListType
     */
    public function getPathForm(){
        $pathForm = new PathListType();
        return $pathForm;
    }

    /**
     * @Route("/partial/{name}", options={"expose"=true})
     * @param $name string
     * @return \Symfony\Component\HttpFoundation\Response
     */
    public function partial($name){
        $opt = array_keys($this->container->getParameter('genres_dest'));
        sort($opt);
        return $this->render(
            'CpyreeSaparManagerBundle:Manager:partials/'.$name.'.twig',
                array(
                    'pathForm'  => $this->createForm($this->getPathForm())->createView(),
                    'listOpts'   => $opt
                )
            );
    }

    /**
     * @Route("/stream/{file}", options={"expose"=true})
     * @param $file
     */
    public function streamAction($file){
        $file = base64_decode($file);
        header("Content-Transfer-Encoding: binary");
        header("Content-Type: audio/mpeg");
        header('Content-length: ' . filesize($file));
        readfile($file);
        die();
    }

}
